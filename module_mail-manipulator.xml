<?xml version="1.0" encoding="UTF-8"?>
<project name="module_mail-manipulator" default="compile.module.mail-manipulator">
    <dirname property="module.mail-manipulator.basedir" file="${ant.file.module_mail-manipulator}"/>

    <property name="module.jdk.home.mail-manipulator" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.mail-manipulator" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.mail-manipulator" value="${project.jdk.classpath}"/>

    <property name="compiler.args.mail-manipulator" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>

    <property name="mail-manipulator.output.dir" value="${module.mail-manipulator.basedir}/target/classes"/>
    <property name="mail-manipulator.testoutput.dir" value="${module.mail-manipulator.basedir}/target/test-classes"/>

    <path id="mail-manipulator.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="mail-manipulator.module.production.classpath">
        <path refid="${module.jdk.classpath.mail-manipulator}"/>
        <path refid="library.maven:_javax.mail:mail:1.5.0-b01.classpath"/>
        <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    </path>

    <path id="mail-manipulator.runtime.production.module.classpath">
        <pathelement location="${mail-manipulator.output.dir}"/>
        <path refid="library.maven:_javax.mail:mail:1.5.0-b01.classpath"/>
        <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    </path>

    <path id="mail-manipulator.module.classpath">
        <path refid="${module.jdk.classpath.mail-manipulator}"/>
        <pathelement location="${mail-manipulator.output.dir}"/>
        <path refid="library.maven:_javax.mail:mail:1.5.0-b01.classpath"/>
        <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    </path>

    <path id="mail-manipulator.runtime.module.classpath">
        <pathelement location="${mail-manipulator.testoutput.dir}"/>
        <pathelement location="${mail-manipulator.output.dir}"/>
        <path refid="library.maven:_javax.mail:mail:1.5.0-b01.classpath"/>
        <path refid="library.maven:_javax.activation:activation:1.1.classpath"/>
    </path>


    <patternset id="excluded.from.module.mail-manipulator">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.mail-manipulator">
        <patternset refid="excluded.from.module.mail-manipulator"/>
    </patternset>

    <path id="mail-manipulator.module.sourcepath">
        <dirset dir="${module.mail-manipulator.basedir}">
            <include name="src/main/java"/>
            <include name="src/main/resources"/>
        </dirset>
    </path>

    <path id="mail-manipulator.module.test.sourcepath">
        <dirset dir="${module.mail-manipulator.basedir}">
            <include name="src/test/java"/>
        </dirset>
    </path>


    <target name="compile.module.mail-manipulator" depends="compile.module.mail-manipulator.production,compile.module.mail-manipulator.tests" description="Compile module mail-manipulator"/>

    <target name="compile.module.mail-manipulator.production" depends="register.custom.compilers" description="Compile module mail-manipulator; production classes">
        <mkdir dir="${mail-manipulator.output.dir}"/>
        <javac2 destdir="${mail-manipulator.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true"
                executable="${module.jdk.bin.mail-manipulator}/javac">
            <compilerarg line="${compiler.args.mail-manipulator}"/>
            <bootclasspath refid="mail-manipulator.module.bootclasspath"/>
            <classpath refid="mail-manipulator.module.production.classpath"/>
            <src refid="mail-manipulator.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.mail-manipulator"/>
        </javac2>

        <copy todir="${mail-manipulator.output.dir}">
            <fileset dir="${module.mail-manipulator.basedir}/src/main/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.mail-manipulator.basedir}/src/main/resources">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.mail-manipulator.tests" depends="register.custom.compilers,compile.module.mail-manipulator.production" description="compile module mail-manipulator; test classes"
            unless="skip.tests">
        <mkdir dir="${mail-manipulator.testoutput.dir}"/>
        <javac2 destdir="${mail-manipulator.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true"
                executable="${module.jdk.bin.mail-manipulator}/javac">
            <compilerarg line="${compiler.args.mail-manipulator}"/>
            <bootclasspath refid="mail-manipulator.module.bootclasspath"/>
            <classpath refid="mail-manipulator.module.classpath"/>
            <src refid="mail-manipulator.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.mail-manipulator"/>
        </javac2>

        <copy todir="${mail-manipulator.testoutput.dir}">
            <fileset dir="${module.mail-manipulator.basedir}/src/test/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.mail-manipulator" description="cleanup module">
        <delete dir="${mail-manipulator.output.dir}"/>
        <delete dir="${mail-manipulator.testoutput.dir}"/>
    </target>
</project>